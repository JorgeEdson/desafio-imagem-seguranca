// <auto-generated />
using System;
using Desafio.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Desafio.Database.Migrations
{
    [DbContext(typeof(DesafioContext))]
    [Migration("20230810072037_PrimeiraMigration")]
    partial class PrimeiraMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Desafio.Core.Dominio.Entidades.Dispositivo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id");

                    b.Property<int>("Endereco")
                        .HasColumnName("Endereco");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Dispositivos");
                });

            modelBuilder.Entity("Desafio.Core.Dominio.Entidades.Evento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id");

                    b.Property<Guid>("DispositivoId")
                        .HasColumnName("DispositivoId");

                    b.Property<int>("TipoEvento")
                        .HasColumnName("TipoEvento");

                    b.HasKey("Id");

                    b.HasIndex("DispositivoId");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("Desafio.Core.Dominio.Entidades.Evento", b =>
                {
                    b.HasOne("Desafio.Core.Dominio.Entidades.Dispositivo", "Dispositivo")
                        .WithMany("Eventos")
                        .HasForeignKey("DispositivoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
